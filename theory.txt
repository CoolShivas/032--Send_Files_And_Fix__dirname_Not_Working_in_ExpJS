Starting of ExpressJS step by step.

Step :- 1.) Formation of package.json file using npm init command in the terminal.

Step :- 2.) Installation of express using npm install express or npm i express command in the terminal.

Step :- 3.) Creation of .gitIgnore file to make sure that node_modules package will not push it to gitHub repo.

Step :- 4.) Creation of new blank file named as app.js. And, also make sure that the package.json file should also have this ("main": "app.js") instead of this ("main": "index.js" ). Actually, it's depends on us whatever name we want to give. Give it but mention it on the package.json file's key&value as this ("main": "app.js") or anything else.

Step :- 5.)  Use of ES module by which we can use import and export feature instead of require.

Step :- 6.) Automatically, ExpressJS understand itself most of the things such as (Request Method GET; Status Code 200 OK;content-type text/html; charset=utf-8; and multi-line code). Previously, we have to defined this things in NodeJS.

Step :- 7.) Use of .env file to hide sensitive information or data from others. So, firstly create the .env file and mention about the (PORT=4000) in the root directory of project. Secondly, open the app.js and instead of (const PORT = 3000;) use this (const PORT = process.env.PORT;). Thirdly, open the package.json file and mention about the dev such as ("shiva": "node --env-file=.env --watch app.js"). And, finally don't forgot to add this (.env in the .gitIgnore file)  run the project again. 

Step :- 8.) Use of .env-example file to show what are the thing been hidden. To make the other dev about these important things. And, use of fallback default port number as 3000 if something wrong to render/continue on 3000.

Step :- 9.) Use of validation in PORT. Whether, the PORT variable is having a number or string. If it going to be string then convert it into number or given the fallback number in the new file named as environ.js file with some validation on PORT. And, now it is importing to app.js file (import { PORT } from "./environ.js";) to be used in listen the server.

Step :- 10.) If by mistake written as PORT="4000" be string format. Then, how to validate that time we have to use the zod library to do the validation more easy or go through the traditional ways. So, first install the zod (npm i zod) then make changes in the environ.js file and again import that file to app.js file to run the server.

Step :- 11.) 
Step :- 12.) 